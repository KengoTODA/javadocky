name: Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/checkout@v2
    - name: Restore Gradle cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build with Gradle
      uses: paambaati/codeclimate-action@v2.7.5
      with:
        coverageCommand: ./gradlew spotlessCheck build sonarqube -x integrationTest -Dsonar.organization=kengotoda-github -Dsonar.projectKey=javadocky -Dsonar.host.url=https://sonarcloud.io
        coverageLocations: ${{github.workspace}}/build/reports/jacoco/test/jacocoTestReport.xml:jacoco
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        JACOCO_SOURCE_PATH: "${{github.workspace}}/src/main/java ${{github.workspace}}/src/main/kotlin"
    - name: Upload Test Report
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: build reports
        path: build/reports
  docker:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Image
      run: |
        docker build -t kengotoda/javadocky .
  integrationTest:
    runs-on: ubuntu-18.04
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up NodeJS 12
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - uses: actions/checkout@v2
    - name: Install google-chrome-stable
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install google-chrome-stable
    - name: Run Integration Test
      run: npx percy exec -- ./gradlew integrationTest
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
    - name: Upload Test Report
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test results
        path: build/test-results/integrationTest
