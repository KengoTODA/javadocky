name: Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/checkout@v1
    - name: Restore Gradle cache
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build with Gradle
      uses: KengoTODA/codeclimate-action@master
      with:
        coverageCommand: ./gradlew spotlessCheck build sonarqube -x integrationTest -Dsonar.organization=kengotoda-github -Dsonar.projectKey=javadocky -Dsonar.host.url=https://sonarcloud.io
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        JACOCO_SOURCE_PATH: 'src/main/java src/main/kotlin'
    - name: Upload Test Report
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: build reports
        path: build/reports
  docker:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Login to Docker Hub
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Image
      run: |
        docker build -t kengotoda/javadocky .
  integrationTest:
    runs-on: ubuntu-18.04
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up NodeJS 12
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - uses: actions/checkout@v1
    - name: Start Tunnel
      uses: LambdaTest/LambdaTest-tunnel-action@v1.0.0
      id: tunnel
      with:
        user: "skypencil@gmail.com"
        accessKey: ${{ secrets.LT_ACCESS_KEY }}
        tunnelName: "'GitHub Actions'"
    - name: Run Integration Test
      run: ./gradlew integrationTest
      env:
        LT_USERNAME: skypencil
        LT_ACCESS_KEY: ${{ secrets.LT_ACCESS_KEY }}
    - name: Upload Test Report
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test results
        path: build/test-results/integrationTest
    - name: Gracefully stop the LambdaTest tunnel
      run: curl -X DELETE http://127.0.0.1:${{ steps.tunnel.outputs.port }}/api/v1.0/stop
      if: always()
