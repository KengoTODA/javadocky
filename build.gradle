plugins {
  id "java"
  id 'jacoco'
  id "org.jetbrains.kotlin.jvm" version "1.4.30"
  id "com.diffplug.spotless" version "5.10.2" apply false
  id "io.spring.dependency-management" version "1.0.11.RELEASE"
  id "net.ltgt.errorprone" version "1.3.0"
  id "org.sonarqube" version "3.1.1"
  id "org.springframework.boot" version "2.4.3"
}

repositories {
  mavenCentral()
}

apply from: "$rootDir/gradle/errorprone.gradle"
apply from: "$rootDir/gradle/spotless.gradle"
apply from: "$rootDir/gradle/test.gradle"
apply from: "$rootDir/gradle/integration-test.gradle"

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  compile 'org.apache.maven:maven-artifact:3.6.3'
  compile('org.springframework.boot:spring-boot-starter-webflux'){
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
  }
  compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
  compile 'org.codehaus.janino:janino'
  compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

tasks.withType(JavaCompile).all {
  options.release = 15
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions {
    jvmTarget = "15"
  }
}

sonarqube {
  properties {
    property "sonar.coverage.jacoco.xmlReportPaths", tasks.jacocoTestReport.reports.xml.destination
  }
}

def getBranch() {
  def process = 'git branch --show-current'.execute()
  process.waitFor()
  return process.text.trim()
}

def getHash() {
  def process = 'git rev-parse HEAD'.execute()
  process.waitFor()
  return process.text.trim()
}

bootJar {
  doFirst {
    manifest {
      attributes (
        'Build-Jdk': "${System.properties['java.vendor']} ${System.properties['java.vm.version']}",
        'Created-By': "Gradle ${gradle.gradleVersion}",
        'Git-Branch': getBranch(),
        'Git-Hash': getHash()
      )
    }
  }
}

defaultTasks 'spotlessApply', 'build'
