plugins {
  id "java"
  id 'jacoco'
  id "com.diffplug.gradle.spotless" version "3.24.3"
  id "io.spring.dependency-management" version "1.0.8.RELEASE"
  id "net.ltgt.errorprone" version "0.8.1"
  id "org.sonarqube" version "2.8"
  id "org.springframework.boot" version "2.1.9.RELEASE"
  id "com.gtramontina.ghooks.gradle" version "1.1.1"
}

repositories {
  mavenCentral()
}

ext.sourceCompatibility = JavaVersion.VERSION_11

apply from: "$rootDir/gradle/errorprone.gradle"
apply from: "$rootDir/gradle/spotless.gradle"
apply from: "$rootDir/gradle/test.gradle"
apply from: "$rootDir/gradle/integration-test.gradle"

dependencies {
  compile 'org.apache.maven:maven-artifact:3.6.2'
  compile('org.springframework.boot:spring-boot-starter-webflux'){
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
  }
  compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
  compile 'org.codehaus.janino:janino:3.1.0'
  compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

sonarqube {
  properties {
    property "sonar.coverage.jacoco.xmlReportPaths", tasks.jacocoTestReport.reports.xml.destination
  }
}

// Install git-hooks into development environment
// TODO configure git-secrets automatically
tasks.installGitHooks.onlyIf {
  System.getenv('CI') != 'true' && System.getenv('GITHUB_WORKFLOW') == null
}

def getBranch() {
  def process = 'git branch --show-current'.execute()
  process.waitFor()
  return process.text.trim()
}

def getHash() {
  def process = 'git rev-parse HEAD'.execute()
  process.waitFor()
  return process.text.trim()
}

bootJar {
  doFirst {
    manifest {
      attributes (
        'Build-Jdk': "${System.properties['java.vendor']} ${System.properties['java.vm.version']}",
        'Created-By': "Gradle ${gradle.gradleVersion}",
        'Git-Branch': getBranch(),
        'Git-Hash': getHash()
      )
    }
  }
}

defaultTasks 'spotlessApply', 'build'
